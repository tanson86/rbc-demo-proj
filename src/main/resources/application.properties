spring.application.name=spring-boot-demo

rsa.private-key=classpath:certs/private.pem
rsa.public-key=classpath:certs/public.pem

spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.h2.console.settings.trace=false
spring.h2.console.settings.web-allow-others=false
spring.jpa.defer-datasource-initialization = true
spring.sql.init.platform=h2
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Redis configuration
spring.redis.host=localhost
spring.redis.port=6379

# Enable caching
spring.cache.type=redis
spring.cache.time-to-live=60000

#Session timeout. If a duration suffix is not specified, seconds is used.
server.servlet.session.timeout=3600
#Sessions flush mode.
spring.session.redis.flush-mode=on_save
#Namespace for keys used to store sessions.
spring.session.redis.namespace=spring:session

#Testing ConfigurationProperties
mail.credentials.authMethod=imauthmethod
mail.credentials.username=imuser
mail.credentials.password=impwd

#kafka producers
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.add.type.headers=false
spring.cloud.stream.kafka.binder.autoCreateTopics=false

#kafka consumers
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.consumer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.group-id=user-group
spring.kafka.consumer.auto-offset-reset=earliest